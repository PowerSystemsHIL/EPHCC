<ui_settings>
    <version>2.0</version>
    <mode>2</mode>
    <canvas_bg_color>#ffffff</canvas_bg_color>
    <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts.
# This code is always executed after Custom UI is loaded and prior simulation start.

# HIL Control Panel API
from typhoon.api import hil_control_panel as hil

# Variable 'SETTINGS_DIR' holds directory where loaded settings .cus file is located.
# Also you can call 'get_settings_dir_path()' function in any
# Macro and Expression scripts to get the same directory.
SETTINGS_DIR = get_settings_dir_path()

Sb_gen1 = 3.5#MVA]]></initialization_code>
    <components>
        <component_data>
                <id>77c7724f1eab11e7850d4c34882a0abb</id>
                <name><![CDATA[Synch Check]]></name>
                <type>PhasorGraphDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
import math
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing values
# that will be displayed
# e.g displayValue = [ ['Phasor 1 name', Phasor 1 phase, Phasor 1 magnitude],
#                      ['Phasor X name', Phasor X phase, Phasor X magnitude] ]
V1 = hil.read_analog_signal(name = "DIESEL GENSET.Sync_Check.PLLs.V_grid")
V2 = hil.read_analog_signal(name = "DIESEL GENSET.Sync_Check.PLLs.V_gen")
phase = 180*hil.read_analog_signal(name = "DIESEL GENSET.Sync_Check.check_phase_diff.phase_diff")/math.pi


if V1>0:
    alpha = 0
    beta = phase
else:
    alpha = 180
    beta = phase + 180
    


displayValue = [['Vref',alpha,abs(V1)],['Vgen1',beta,abs(V2)]]

]]></code>
                <signals><![CDATA[]]></signals>
                <updateRate>500</updateRate>
                <background_color>#ffffff</background_color>
                <hierarchy_position>2</hierarchy_position>
                <phasors_data>
                    <phasor>
                        <display_name><![CDATA[Phasor [Double click to edit]]]></display_name>
                        <magnitude_signal><![CDATA[CIL_F1_Critical1.Lb]]></magnitude_signal>
                        <phase_signal><![CDATA[CIL_F1_Critical1.Lb]]></phase_signal>
                    </phasor>
                    </phasors_data>
                <widget_settings>
                    <x>752</x>
                    <y>0</y>
                    <width>328</width>
                    <height>256</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <range_max>20.0</range_max>
                    <auto_scale_enabled>True</auto_scale_enabled>
                    <legend_enabled>True</legend_enabled>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>7848d74f1eab11e7b0ab4c34882a0abb</id>
                <name><![CDATA[Phasor graph]]></name>
                <type>PhasorGraphDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
import math
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing values
# that will be displayed
# e.g displayValue = [ ['Phasor 1 name', Phasor 1 phase, Phasor 1 magnitude],
#                      ['Phasor X name', Phasor X phase, Phasor X magnitude] ]
S = hil.read_analog_signal(name = "DIESEL GENSET.Measurements.S_Gen1")
P = hil.read_analog_signal(name = "DIESEL GENSET.Measurements.P_Gen1")
Q = hil.read_analog_signal(name = "DIESEL GENSET.Measurements.Q_Gen1")
theta = 180*math.atan2(Q,P)/math.pi
#S = (P**2+Q**2)**(1.0/2.0)


if P>0:
    alpha = 0
else:
    alpha = 180
    
if Q>0:
    beta = 90
else:
    beta = 270

displayValue = [['S',theta,abs(Sb_gen1*S)],['P',alpha,abs(Sb_gen1*P)],['Q',beta,abs(Sb_gen1*Q)]]

]]></code>
                <signals><![CDATA[]]></signals>
                <updateRate>500</updateRate>
                <background_color>#ffffff</background_color>
                <hierarchy_position>2</hierarchy_position>
                <phasors_data>
                    <phasor>
                        <display_name><![CDATA[Phasor [Double click to edit]]]></display_name>
                        <magnitude_signal><![CDATA[CIL_F1_Critical1.Lb]]></magnitude_signal>
                        <phase_signal><![CDATA[CIL_F1_Critical1.Lb]]></phase_signal>
                    </phasor>
                    </phasors_data>
                <widget_settings>
                    <x>408</x>
                    <y>0</y>
                    <width>328</width>
                    <height>256</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <range_max>20.0</range_max>
                    <auto_scale_enabled>True</auto_scale_enabled>
                    <legend_enabled>True</legend_enabled>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>c0759b00b26611e695516c2cc60cdf2d</id>
                <name><![CDATA[Grid Active Power]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

P = hil.read_analog_signal(name = "Grid_meas.P")
displayValue = P/1.0e6

]]></code>
                <signal_name><![CDATA[Grid_meas.P]]></signal_name>
                <unit><![CDATA[MW]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>240</x>
                    <y>0</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>ce83a3ee07dd11e79c7d4c34882a0abb</id>
                <name><![CDATA[Grid Reactive Power]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

Q = hil.read_analog_signal(name = "Grid_meas.Q")
displayValue = Q/1.0e6

]]></code>
                <signal_name><![CDATA[Grid_meas.P]]></signal_name>
                <unit><![CDATA[MVAr]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>384</x>
                    <y>0</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>660935d11eab11e7b3624c34882a0abb</id>
                <name><![CDATA[Genset Control]]></name>
                <displayed_name><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">
<html><head><meta name="qrichtext" content="1" /><style type="text/css">
p, li { white-space: pre-wrap; }
</style></head><body style=" font-family:'Arial'; font-size:8pt; font-weight:400; font-style:normal;">
<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Genset Control</p></body></html>]]></displayed_name>
                <name_position><![CDATA[Top]]></name_position>
                <type>SubPanel</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[[u'7848d74f1eab11e7b0ab4c34882a0abb', u'77c7724f1eab11e7850d4c34882a0abb', u'77be98ae1eab11e7a7cf4c34882a0abb', u'77c1a5f01eab11e797e84c34882a0abb', u'77c48c1e1eab11e788bf4c34882a0abb', u'77db215e1eab11e7996e4c34882a0abb', u'77de078f1eab11e7aa0f4c34882a0abb', u'77e0edc01eab11e798a74c34882a0abb', u'77e3d3f01eab11e79e2f4c34882a0abb', u'77e6930f1eab11e782d44c34882a0abb', u'77e979401eab11e79a734c34882a0abb', u'77ec385e1eab11e7b5e64c34882a0abb', u'77eef7801eab11e7bf314c34882a0abb', u'77f1b69e1eab11e7abbe4c34882a0abb', u'77f475c01eab11e7ba664c34882a0abb', u'77f783001eab11e78a3d4c34882a0abb', u'78114c8f1eab11e7b7184c34882a0abb', u'78140bb01eab11e7994d4c34882a0abb', u'781740001eab11e7bd524c34882a0abb', u'781a4d401eab11e799d64c34882a0abb', u'781d33701eab11e7bee74c34882a0abb', u'7836fd001eab11e78ec94c34882a0abb', u'7839e3301eab11e7bfc24c34882a0abb', u'783cc9611eab11e7bd714c34882a0abb', u'783fd6a11eab11e793704c34882a0abb', u'7842e3e11eab11e7a5434c34882a0abb', u'7845ca0f1eab11e7a1a34c34882a0abb', u'785d70c01eab11e799534c34882a0abb', u'786056f01eab11e7bd614c34882a0abb', u'78633d1e1eab11e7a1354c34882a0abb', u'7866234f1eab11e7b55b4c34882a0abb', u'786909801eab11e79fdb4c34882a0abb', u'786bc89e1eab11e793d14c34882a0abb', u'786f4b0f1eab11e7b5eb4c34882a0abb']]]></components_ids>
                <hierarchy_position>1</hierarchy_position>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <image><![CDATA[:/ui/images/misc/subpanel_b_b.png]]></image>
                <image_scaling><![CDATA[Keep aspect ratio]]></image_scaling>
                <widget_settings>
                    <x>0</x>
                    <y>0</y>
                    <width>168</width>
                    <height>152</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
            </component_data>
        <component_data>
                <id>77be98ae1eab11e7a7cf4c34882a0abb</id>
                <name><![CDATA[CHP Heat Supply]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
displayValue = 0.0

]]></code>
                <signal_name><![CDATA[Control.Governor_and_Engine1.CHP_heat_supply]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>2</hierarchy_position>
                <widget_settings>
                    <x>16</x>
                    <y>432</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>77c1a5f01eab11e797e84c34882a0abb</id>
                <name><![CDATA[P ref [MW]]]></name>
                <type>SliderMacro</type>
                <description><![CDATA[None]]></description>
                <code><![CDATA[#------------- MANDATORY IMPORTS ---------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil

# Function for printing text to console (e.g printf("Hello world"))
from typhoon.utilities.misc import printf
#------------------------------------------------

# NOTE: entered value is available through variable 'inputValue'

hil.set_cp_input_value('User defined', 'Secondary Control', 'DIESEL GENSET.Control.P Secondary Control1.Pref', inputValue/Sb_gen1)
]]></code>
                <inputValue><![CDATA[1.5]]></inputValue>
                <min>0.0</min>
                <max>5.0</max>
                <step>0.1</step>
                <execute_on_load>True</execute_on_load>
                <hierarchy_position>2</hierarchy_position>
                <widget_settings>
                    <x>792</x>
                    <y>240</y>
                    <width>288</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
            </component_data>
        <component_data>
                <id>77c48c1e1eab11e788bf4c34882a0abb</id>
                <name><![CDATA[w ref [RPM]]]></name>
                <type>SliderMacro</type>
                <description><![CDATA[None]]></description>
                <code><![CDATA[#------------- MANDATORY IMPORTS ---------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil

# Function for printing text to console (e.g printf("Hello world"))
from typhoon.utilities.misc import printf
#------------------------------------------------

# NOTE: entered value is available through variable 'inputValue'

hil.set_cp_input_value('User defined', 'Governor Settings', 'DIESEL GENSET.Control.Governor_and_Engine1.wref', inputValue/1800.0)
]]></code>
                <inputValue><![CDATA[1800.0]]></inputValue>
                <min>0.0</min>
                <max>2000.0</max>
                <step>1.0</step>
                <execute_on_load>True</execute_on_load>
                <hierarchy_position>2</hierarchy_position>
                <widget_settings>
                    <x>504</x>
                    <y>240</y>
                    <width>288</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
            </component_data>
        <component_data>
                <id>77db215e1eab11e7996e4c34882a0abb</id>
                <name><![CDATA[Tmec]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
displayValue = 0.0

]]></code>
                <signal_name><![CDATA[Control.Governor_and_Engine1.Tmec]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[8]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>2</hierarchy_position>
                <widget_settings>
                    <x>168</x>
                    <y>432</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>77de078f1eab11e7aa0f4c34882a0abb</id>
                <name><![CDATA[Pmec]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
displayValue = 0.0

]]></code>
                <signal_name><![CDATA[Control.Governor_and_Engine1.NG_Governor.Pmec]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[8]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>2</hierarchy_position>
                <widget_settings>
                    <x>168</x>
                    <y>376</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>77e0edc01eab11e798a74c34882a0abb</id>
                <name><![CDATA[Active Power]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
P = hil.read_analog_signal(name = "DIESEL GENSET.Measurements.P_Gen1")
displayValue = P*Sb_gen1


]]></code>
                <signal_name><![CDATA[]]></signal_name>
                <unit><![CDATA[MW]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>2</hierarchy_position>
                <widget_settings>
                    <x>8</x>
                    <y>152</y>
                    <width>112</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>77e3d3f01eab11e79e2f4c34882a0abb</id>
                <name><![CDATA[Speed]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
w = hil.read_analog_signal(name = "DIESEL GENSET.Control.Governor_and_Engine1.wmeas")
displayValue = w*1800
]]></code>
                <signal_name><![CDATA[Control.Governor_and_Diesel_Engine1.wmeas]]></signal_name>
                <unit><![CDATA[RPM]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>500</updateRate>
                <hierarchy_position>2</hierarchy_position>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>192</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>2000.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>77e6930f1eab11e782d44c34882a0abb</id>
                <name><![CDATA[Terminal Voltage]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
w = hil.read_analog_signal(name = "DIESEL GENSET.Control.Exciter1.Vt")
displayValue = w*13.8
]]></code>
                <signal_name><![CDATA[DIESEL GENSET.Control.Exciter1.Vf]]></signal_name>
                <unit><![CDATA[kV]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>500</updateRate>
                <hierarchy_position>2</hierarchy_position>
                <widget_settings>
                    <x>192</x>
                    <y>8</y>
                    <width>192</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>16.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>77e979401eab11e79a734c34882a0abb</id>
                <name><![CDATA[PQ Mode]]></name>
                <type>LedDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Digital signal</data_type>
                <signal_name><![CDATA[Control.Read_Control_mode.PQ_mode]]></signal_name>
                <hil_device>0</hil_device>
                <led_color>Green</led_color>
                <code><![CDATA[#------------- MANDATORY IMPORTS ---------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#------------------------------------------------

# mandatory variable used for storing LED indicator state
# True -> On, False -> Off
P = hil.read_analog_signal(name = "Control.P Secondary Control1.P_mode")
Q = hil.read_analog_signal(name = "Control.Q Secondary Control1.Q_mode")

if P==0:
    if Q==0:
        displayValue = True
    else:
        displayValue = False
else:
    displayValue = False


]]></code>
                <updateRate>500</updateRate>
                <hierarchy_position>2</hierarchy_position>
                <widget_settings>
                    <x>176</x>
                    <y>336</y>
                    <width>128</width>
                    <height>32</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
            </component_data>
        <component_data>
                <id>77ec385e1eab11e7b5e64c34882a0abb</id>
                <name><![CDATA[Grid Forming Mode]]></name>
                <type>LedDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Digital signal</data_type>
                <signal_name><![CDATA[Sync_Check.Contactor_Control.Grid_Forming]]></signal_name>
                <hil_device>0</hil_device>
                <led_color>Green</led_color>
                <code><![CDATA[#------------- MANDATORY IMPORTS ---------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#------------------------------------------------

# mandatory variable used for storing LED indicator state
# True -> On, False -> Off
displayValue = False
]]></code>
                <updateRate>500</updateRate>
                <hierarchy_position>2</hierarchy_position>
                <widget_settings>
                    <x>176</x>
                    <y>264</y>
                    <width>128</width>
                    <height>32</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
            </component_data>
        <component_data>
                <id>77eef7801eab11e7bf314c34882a0abb</id>
                <name><![CDATA[Breaker control]]></name>
                <type>LedDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Digital signal</data_type>
                <signal_name><![CDATA[Sync_Check.Contactor_Control.MCB_control]]></signal_name>
                <hil_device>0</hil_device>
                <led_color>Green</led_color>
                <code><![CDATA[#------------- MANDATORY IMPORTS ---------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#------------------------------------------------

# mandatory variable used for storing LED indicator state
# True -> On, False -> Off
displayValue = False
]]></code>
                <updateRate>500</updateRate>
                <hierarchy_position>2</hierarchy_position>
                <widget_settings>
                    <x>24</x>
                    <y>336</y>
                    <width>136</width>
                    <height>32</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
            </component_data>
        <component_data>
                <id>77f1b69e1eab11e7abbe4c34882a0abb</id>
                <name><![CDATA[Activate Phase Lock]]></name>
                <type>LedDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Digital signal</data_type>
                <signal_name><![CDATA[Sync_Check.Activate_PhaseLock]]></signal_name>
                <hil_device>0</hil_device>
                <led_color>Green</led_color>
                <code><![CDATA[#------------- MANDATORY IMPORTS ---------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#------------------------------------------------

# mandatory variable used for storing LED indicator state
# True -> On, False -> Off
displayValue = False
]]></code>
                <updateRate>500</updateRate>
                <hierarchy_position>2</hierarchy_position>
                <widget_settings>
                    <x>24</x>
                    <y>264</y>
                    <width>136</width>
                    <height>32</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
            </component_data>
        <component_data>
                <id>77f475c01eab11e7ba664c34882a0abb</id>
                <name><![CDATA[Actual Temp]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
displayValue = 0.0

]]></code>
                <signal_name><![CDATA[Control.Governor_and_Engine1.Actual_Temp]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>2</hierarchy_position>
                <widget_settings>
                    <x>16</x>
                    <y>488</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>77f783001eab11e78a3d4c34882a0abb</id>
                <name><![CDATA[w meas]]></name>
                <type>TraceDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
displayValue = 0.0

]]></code>
                <signal_name><![CDATA[DIESEL GENSET.Control.Governor_and_Engine1.wmeas]]></signal_name>
                <updateRate>250</updateRate>
                <background_color>#ffffff</background_color>
                <hierarchy_position>2</hierarchy_position>
                <widget_settings>
                    <x>712</x>
                    <y>368</y>
                    <width>344</width>
                    <height>200</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <x_title><![CDATA[x axes]]></x_title>
                    <y_title><![CDATA[y axes]]></y_title>
                    <y_range_min>0.0</y_range_min>
                    <y_range_max>1.1</y_range_max>
                    <time_window>10</time_window>
                    <auto_scale_enabled>False</auto_scale_enabled>
                    <legend_enabled>False</legend_enabled>
                    <x_axis_title_enabled>False</x_axis_title_enabled>
                    <y_axis_title_enabled>False</y_axis_title_enabled>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>78114c8f1eab11e7b7184c34882a0abb</id>
                <name><![CDATA[Exciter On]]></name>
                <type>LedDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Digital signal</data_type>
                <signal_name><![CDATA[Control.Exciter1.Exciter_on]]></signal_name>
                <hil_device>0</hil_device>
                <led_color>Green</led_color>
                <code><![CDATA[#------------- MANDATORY IMPORTS ---------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#------------------------------------------------

# mandatory variable used for storing LED indicator state
# True -> On, False -> Off
displayValue = False
]]></code>
                <updateRate>500</updateRate>
                <hierarchy_position>2</hierarchy_position>
                <widget_settings>
                    <x>24</x>
                    <y>240</y>
                    <width>136</width>
                    <height>32</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
            </component_data>
        <component_data>
                <id>78140bb01eab11e7994d4c34882a0abb</id>
                <name><![CDATA[Operation Mode]]></name>
                <type>ComboBoxMacro</type>
                <description><![CDATA[None]]></description>
                <code><![CDATA[#------------- MANDATORY IMPORTS ---------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil

# Function for printing text to console (e.g printf("Hello world"))
from typhoon.utilities.misc import printf
#------------------------------------------------

# NOTE: entered value is available through variable 'inputValue'

if inputValue == 'GF - Grid forming':
    # do something when 'Case 1' is selected
    hil.set_cp_input_value('User defined', 'Grid Mode', 'DIESEL GENSET.Sync_Check.Contactor_Control.Grid_mode', 0.0)
    pass
elif inputValue == 'GT - Grid Tied':
    # do something when 'Case 2' is selected
    hil.set_cp_input_value('User defined', 'Grid Mode', 'DIESEL GENSET.Sync_Check.Contactor_Control.Grid_mode', 1.0)
    pass

]]></code>
                <inputValue><![CDATA[GT - Grid Tied]]></inputValue>
                <availableValues>[u'GF - Grid forming', u'GT - Grid Tied']</availableValues>
                <unit><![CDATA[]]></unit>
                <execute_on_load>True</execute_on_load>
                <hierarchy_position>2</hierarchy_position>
                <widget_settings>
                    <x>336</x>
                    <y>336</y>
                    <width>200</width>
                    <height>32</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
            </component_data>
        <component_data>
                <id>781740001eab11e7bd524c34882a0abb</id>
                <name><![CDATA[Control Mode]]></name>
                <type>ComboBoxMacro</type>
                <description><![CDATA[None]]></description>
                <code><![CDATA[#------------- MANDATORY IMPORTS ---------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil

# Function for printing text to console (e.g printf("Hello world"))
from typhoon.utilities.misc import printf
#------------------------------------------------

# NOTE: entered value is available through variable 'inputValue'


if inputValue == 'PV':
    # do something when 'Case 2' is selected
    hil.set_cp_input_value('User defined', 'Governor Settings', 'DIESEL GENSET.Control.Q Secondary Control1.Q_Control_Mode', 0.0)
    pass
elif inputValue == 'PQ':
    # do something when 'Case 3' is selected
    hil.set_cp_input_value('User defined', 'Governor Settings', 'DIESEL GENSET.Control.Q Secondary Control1.Q_Control_Mode', 1.0)
    pass

]]></code>
                <inputValue><![CDATA[PQ]]></inputValue>
                <availableValues>[u'PV', u'PQ']</availableValues>
                <unit><![CDATA[]]></unit>
                <execute_on_load>True</execute_on_load>
                <hierarchy_position>2</hierarchy_position>
                <widget_settings>
                    <x>336</x>
                    <y>304</y>
                    <width>152</width>
                    <height>32</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
            </component_data>
        <component_data>
                <id>781a4d401eab11e799d64c34882a0abb</id>
                <name><![CDATA[Breaker command]]></name>
                <type>LedDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Digital signal</data_type>
                <signal_name><![CDATA[Sync_Check.Contactor_Control.MCB_cmd]]></signal_name>
                <hil_device>0</hil_device>
                <led_color>Green</led_color>
                <code><![CDATA[#------------- MANDATORY IMPORTS ---------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#------------------------------------------------

# mandatory variable used for storing LED indicator state
# True -> On, False -> Off
displayValue = False
]]></code>
                <updateRate>500</updateRate>
                <hierarchy_position>2</hierarchy_position>
                <widget_settings>
                    <x>176</x>
                    <y>216</y>
                    <width>128</width>
                    <height>32</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
            </component_data>
        <component_data>
                <id>781d33701eab11e7bee74c34882a0abb</id>
                <name><![CDATA[Vt]]></name>
                <type>TraceDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
displayValue = 0.0

]]></code>
                <signal_name><![CDATA[DIESEL GENSET.Control.Exciter1.Vt]]></signal_name>
                <updateRate>250</updateRate>
                <background_color>#ffffff</background_color>
                <hierarchy_position>2</hierarchy_position>
                <widget_settings>
                    <x>352</x>
                    <y>368</y>
                    <width>344</width>
                    <height>200</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <x_title><![CDATA[x axes]]></x_title>
                    <y_title><![CDATA[y axes]]></y_title>
                    <y_range_min>0.0</y_range_min>
                    <y_range_max>1.1</y_range_max>
                    <time_window>10</time_window>
                    <auto_scale_enabled>False</auto_scale_enabled>
                    <legend_enabled>False</legend_enabled>
                    <x_axis_title_enabled>False</x_axis_title_enabled>
                    <y_axis_title_enabled>False</y_axis_title_enabled>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>7836fd001eab11e78ec94c34882a0abb</id>
                <name><![CDATA[Apparent Power]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
S = hil.read_analog_signal(name = "DIESEL GENSET.Measurements.S_Gen1")
displayValue = S*Sb_gen1


]]></code>
                <signal_name><![CDATA[]]></signal_name>
                <unit><![CDATA[MVA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>2</hierarchy_position>
                <widget_settings>
                    <x>264</x>
                    <y>152</y>
                    <width>112</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>7839e3301eab11e7bfc24c34882a0abb</id>
                <name><![CDATA[MCB Closed]]></name>
                <type>LedDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Digital signal</data_type>
                <signal_name><![CDATA[DIESEL GENSET.MCB_fb]]></signal_name>
                <hil_device>0</hil_device>
                <led_color>Red</led_color>
                <code><![CDATA[#------------- MANDATORY IMPORTS ---------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#------------------------------------------------

# mandatory variable used for storing LED indicator state
# True -> On, False -> Off
displayValue = False
]]></code>
                <updateRate>500</updateRate>
                <hierarchy_position>2</hierarchy_position>
                <widget_settings>
                    <x>336</x>
                    <y>240</y>
                    <width>128</width>
                    <height>32</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
            </component_data>
        <component_data>
                <id>783cc9611eab11e7bd714c34882a0abb</id>
                <name><![CDATA[Efficiency]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
displayValue = 0.0

]]></code>
                <signal_name><![CDATA[Control.Governor_and_Engine1.NG_Governor.Engine.eff]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>2</hierarchy_position>
                <widget_settings>
                    <x>16</x>
                    <y>544</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>783fd6a11eab11e793704c34882a0abb</id>
                <name><![CDATA[Gen1 On]]></name>
                <type>LedDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Digital signal</data_type>
                <signal_name><![CDATA[Control.Governor_and_Engine1.Gen_On]]></signal_name>
                <hil_device>0</hil_device>
                <led_color>Green</led_color>
                <code><![CDATA[#------------- MANDATORY IMPORTS ---------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#------------------------------------------------

# mandatory variable used for storing LED indicator state
# True -> On, False -> Off
displayValue = False
]]></code>
                <updateRate>500</updateRate>
                <hierarchy_position>2</hierarchy_position>
                <widget_settings>
                    <x>24</x>
                    <y>216</y>
                    <width>136</width>
                    <height>32</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
            </component_data>
        <component_data>
                <id>7842e3e11eab11e7a5434c34882a0abb</id>
                <name><![CDATA[Vf Mode]]></name>
                <type>LedDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Digital signal</data_type>
                <signal_name><![CDATA[Control.Read_Control_mode.Vf_mode]]></signal_name>
                <hil_device>0</hil_device>
                <led_color>Green</led_color>
                <code><![CDATA[#------------- MANDATORY IMPORTS ---------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#------------------------------------------------

# mandatory variable used for storing LED indicator state
# True -> On, False -> Off
P = hil.read_analog_signal(name = "Control.P Secondary Control1.P_mode")
Q = hil.read_analog_signal(name = "Control.Q Secondary Control1.Q_mode")

if P==1:
    if Q==1:
        displayValue = True
    else:
        displayValue = False
else:
    displayValue = False


]]></code>
                <updateRate>500</updateRate>
                <hierarchy_position>2</hierarchy_position>
                <widget_settings>
                    <x>176</x>
                    <y>288</y>
                    <width>128</width>
                    <height>32</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
            </component_data>
        <component_data>
                <id>7845ca0f1eab11e7a1a34c34882a0abb</id>
                <name><![CDATA[Q ref [MVAr]]]></name>
                <type>SliderMacro</type>
                <description><![CDATA[None]]></description>
                <code><![CDATA[#------------- MANDATORY IMPORTS ---------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil

# Function for printing text to console (e.g printf("Hello world"))
from typhoon.utilities.misc import printf
#------------------------------------------------

# NOTE: entered value is available through variable 'inputValue'

hil.set_cp_input_value('User defined', 'Secondary Control', 'DIESEL GENSET.Control.Q Secondary Control1.Qref', inputValue/Sb_gen1)
]]></code>
                <inputValue><![CDATA[-0.97]]></inputValue>
                <min>-5.0</min>
                <max>5.0</max>
                <step>0.1</step>
                <execute_on_load>True</execute_on_load>
                <hierarchy_position>2</hierarchy_position>
                <widget_settings>
                    <x>792</x>
                    <y>288</y>
                    <width>288</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
            </component_data>
        <component_data>
                <id>785d70c01eab11e799534c34882a0abb</id>
                <name><![CDATA[Steady State Speed]]></name>
                <type>LedDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Digital signal</data_type>
                <signal_name><![CDATA[Sync_Check.Speed_ss]]></signal_name>
                <hil_device>0</hil_device>
                <led_color>Green</led_color>
                <code><![CDATA[#------------- MANDATORY IMPORTS ---------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#------------------------------------------------

# mandatory variable used for storing LED indicator state
# True -> On, False -> Off
displayValue = False
]]></code>
                <updateRate>500</updateRate>
                <hierarchy_position>2</hierarchy_position>
                <widget_settings>
                    <x>24</x>
                    <y>312</y>
                    <width>136</width>
                    <height>32</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
            </component_data>
        <component_data>
                <id>786056f01eab11e7bd614c34882a0abb</id>
                <name><![CDATA[Gen 1]]></name>
                <type>ComboBoxMacro</type>
                <description><![CDATA[None]]></description>
                <code><![CDATA[#------------- MANDATORY IMPORTS ---------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil

# Function for printing text to console (e.g printf("Hello world"))
from typhoon.utilities.misc import printf
#------------------------------------------------

# NOTE: entered value is available through variable 'inputValue'

if inputValue == 'On':
    # do something when 'Case 1' is selected
    hil.set_cp_input_value('User defined', 'Governor Settings', 'DIESEL GENSET.Control.Governor_and_Engine1.Gen1_On', 1.0)
    pass
elif inputValue == 'Off':
    # do something when 'Case 2' is selected
    hil.set_cp_input_value('User defined', 'Governor Settings', 'DIESEL GENSET.Control.Governor_and_Engine1.Gen1_On', 0.0)
    pass

]]></code>
                <inputValue><![CDATA[On]]></inputValue>
                <availableValues>[u'On', u'Off']</availableValues>
                <unit><![CDATA[]]></unit>
                <execute_on_load>True</execute_on_load>
                <hierarchy_position>2</hierarchy_position>
                <widget_settings>
                    <x>336</x>
                    <y>272</y>
                    <width>152</width>
                    <height>32</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
            </component_data>
        <component_data>
                <id>78633d1e1eab11e7a1354c34882a0abb</id>
                <name><![CDATA[V ref [V]]]></name>
                <type>SliderMacro</type>
                <description><![CDATA[None]]></description>
                <code><![CDATA[#------------- MANDATORY IMPORTS ---------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil

# Function for printing text to console (e.g printf("Hello world"))
from typhoon.utilities.misc import printf
#------------------------------------------------

# NOTE: entered value is available through variable 'inputValue'

hil.set_cp_input_value('User defined', 'Exciter Settings', 'DIESEL GENSET.Control.Exciter1.Vref', inputValue/13.8)
]]></code>
                <inputValue><![CDATA[13.8]]></inputValue>
                <min>0.0</min>
                <max>20.0</max>
                <step>0.1</step>
                <execute_on_load>True</execute_on_load>
                <hierarchy_position>2</hierarchy_position>
                <widget_settings>
                    <x>504</x>
                    <y>288</y>
                    <width>288</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
            </component_data>
        <component_data>
                <id>7866234f1eab11e7b55b4c34882a0abb</id>
                <name><![CDATA[Reactive Power]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
Q = hil.read_analog_signal(name = "DIESEL GENSET.Measurements.Q_Gen1")
displayValue = Q*Sb_gen1



]]></code>
                <signal_name><![CDATA[]]></signal_name>
                <unit><![CDATA[MVAr]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>2</hierarchy_position>
                <widget_settings>
                    <x>128</x>
                    <y>152</y>
                    <width>128</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>786909801eab11e79fdb4c34882a0abb</id>
                <name><![CDATA[PV Mode]]></name>
                <type>LedDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Digital signal</data_type>
                <signal_name><![CDATA[Control.Read_Control_mode.PV_mode]]></signal_name>
                <hil_device>0</hil_device>
                <led_color>Green</led_color>
                <code><![CDATA[#------------- MANDATORY IMPORTS ---------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#------------------------------------------------

# mandatory variable used for storing LED indicator state
# True -> On, False -> Off
P = hil.read_analog_signal(name = "Control.P Secondary Control1.P_mode")
Q = hil.read_analog_signal(name = "Control.Q Secondary Control1.Q_mode")

if P==1:
    if Q==0:
        displayValue = True
    else:
        displayValue = False
else:
    displayValue = False


]]></code>
                <updateRate>500</updateRate>
                <hierarchy_position>2</hierarchy_position>
                <widget_settings>
                    <x>176</x>
                    <y>312</y>
                    <width>128</width>
                    <height>32</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
            </component_data>
        <component_data>
                <id>786bc89e1eab11e793d14c34882a0abb</id>
                <name><![CDATA[Grid Tied Mode]]></name>
                <type>LedDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Digital signal</data_type>
                <signal_name><![CDATA[Sync_Check.Contactor_Control.Grid Tied]]></signal_name>
                <hil_device>0</hil_device>
                <led_color>Green</led_color>
                <code><![CDATA[#------------- MANDATORY IMPORTS ---------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#------------------------------------------------

# mandatory variable used for storing LED indicator state
# True -> On, False -> Off
displayValue = False
]]></code>
                <updateRate>500</updateRate>
                <hierarchy_position>2</hierarchy_position>
                <widget_settings>
                    <x>176</x>
                    <y>240</y>
                    <width>128</width>
                    <height>32</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
            </component_data>
        <component_data>
                <id>786f4b0f1eab11e7b5eb4c34882a0abb</id>
                <name><![CDATA[Phase Match]]></name>
                <type>LedDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Digital signal</data_type>
                <signal_name><![CDATA[Sync_Check.Phase_match]]></signal_name>
                <hil_device>0</hil_device>
                <led_color>Green</led_color>
                <code><![CDATA[#------------- MANDATORY IMPORTS ---------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#------------------------------------------------

# mandatory variable used for storing LED indicator state
# True -> On, False -> Off
displayValue = False
]]></code>
                <updateRate>500</updateRate>
                <hierarchy_position>2</hierarchy_position>
                <widget_settings>
                    <x>24</x>
                    <y>288</y>
                    <width>136</width>
                    <height>32</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
            </component_data>
        <component_data>
                <id>94f3b54f1eab11e7a2644c34882a0abb</id>
                <name><![CDATA[Bus 2 Voltage Mag]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

P = hil.read_analog_signal(name = "Grid_meas.P")
displayValue = P/1.0e6

]]></code>
                <signal_name><![CDATA[F1_PCC.Meas2.Vbus2[0]]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>240</x>
                    <y>72</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>94f478a11eab11e79f324c34882a0abb</id>
                <name><![CDATA[Bus 2 Voltage Angle]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

Q = hil.read_analog_signal(name = "Grid_meas.Q")
displayValue = Q/1.0e6

]]></code>
                <signal_name><![CDATA[F1_PCC.Meas2.Vbus2[1]]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>384</x>
                    <y>72</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>de0c2bf01eab11e795494c34882a0abb</id>
                <name><![CDATA[Bus 3 Voltage Angle]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

Q = hil.read_analog_signal(name = "Grid_meas.Q")
displayValue = Q/1.0e6

]]></code>
                <signal_name><![CDATA[F1_CB4.Meas1.Vbus3[1]]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>384</x>
                    <y>128</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>de0cef401eab11e7a7864c34882a0abb</id>
                <name><![CDATA[Bus 3 Voltage Mag]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

P = hil.read_analog_signal(name = "Grid_meas.P")
displayValue = P/1.0e6

]]></code>
                <signal_name><![CDATA[F1_CB4.Meas1.Vbus3[0]]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>240</x>
                    <y>128</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>e1e5bc9e1eab11e7a68a4c34882a0abb</id>
                <name><![CDATA[Bus 4 Voltage Angle]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

Q = hil.read_analog_signal(name = "Grid_meas.Q")
displayValue = Q/1.0e6

]]></code>
                <signal_name><![CDATA[Feeder1_trafo1.Vbus4[1]]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>384</x>
                    <y>184</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>e1e658e11eab11e7b0694c34882a0abb</id>
                <name><![CDATA[Bus 4 Voltage Mag]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

P = hil.read_analog_signal(name = "Grid_meas.P")
displayValue = P/1.0e6

]]></code>
                <signal_name><![CDATA[Feeder1_trafo1.Vbus4[0]]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>240</x>
                    <y>184</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>e51551b01eab11e79e264c34882a0abb</id>
                <name><![CDATA[Bus 5 Voltage Angle]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

Q = hil.read_analog_signal(name = "Grid_meas.Q")
displayValue = Q/1.0e6

]]></code>
                <signal_name><![CDATA[Feeder1_trafo2.Vbus5[1]]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>384</x>
                    <y>240</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>e51615001eab11e78cb14c34882a0abb</id>
                <name><![CDATA[Bus 5 Voltage Mag]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

P = hil.read_analog_signal(name = "Grid_meas.P")
displayValue = P/1.0e6

]]></code>
                <signal_name><![CDATA[Feeder1_trafo2.Vbus5[0]]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>240</x>
                    <y>240</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>e6ddb59e1eab11e787314c34882a0abb</id>
                <name><![CDATA[Bus 6 Voltage Angle]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

Q = hil.read_analog_signal(name = "Grid_meas.Q")
displayValue = Q/1.0e6

]]></code>
                <signal_name><![CDATA[LOAD.Vbus6[1]]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>384</x>
                    <y>296</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>e6de51e11eab11e7b5274c34882a0abb</id>
                <name><![CDATA[Bus 6 Voltage Mag]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

P = hil.read_analog_signal(name = "Grid_meas.P")
displayValue = P/1.0e6

]]></code>
                <signal_name><![CDATA[LOAD.Vbus6[0]]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>240</x>
                    <y>296</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>e939a7001eab11e7b9a94c34882a0abb</id>
                <name><![CDATA[Bus 7 Voltage Angle]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

Q = hil.read_analog_signal(name = "Grid_meas.Q")
displayValue = Q/1.0e6

]]></code>
                <signal_name><![CDATA[F1_CB7.Meas1.Vbus7[1]]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>384</x>
                    <y>352</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>e93a43401eab11e78a3b4c34882a0abb</id>
                <name><![CDATA[Bus 7 Voltage Mag]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

P = hil.read_analog_signal(name = "Grid_meas.P")
displayValue = P/1.0e6

]]></code>
                <signal_name><![CDATA[F1_CB7.Meas1.Vbus7[0]]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>240</x>
                    <y>352</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>eac5ec4f1eab11e7a66d4c34882a0abb</id>
                <name><![CDATA[Bus 8 Voltage Angle]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

Q = hil.read_analog_signal(name = "Grid_meas.Q")
displayValue = Q/1.0e6

]]></code>
                <signal_name><![CDATA[LOAD2.Vbus8[1]]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>384</x>
                    <y>408</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>eac6afa11eab11e7b3894c34882a0abb</id>
                <name><![CDATA[Bus 8 Voltage Mag]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

P = hil.read_analog_signal(name = "Grid_meas.P")
displayValue = P/1.0e6

]]></code>
                <signal_name><![CDATA[LOAD2.Vbus8[0]]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>240</x>
                    <y>408</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>ec58e85e1eab11e7872f4c34882a0abb</id>
                <name><![CDATA[Bus 9 Voltage Angle]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

Q = hil.read_analog_signal(name = "Grid_meas.Q")
displayValue = Q/1.0e6

]]></code>
                <signal_name><![CDATA[Feeder1_trafo4.Vbus9[1]]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>384</x>
                    <y>464</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>ec59849e1eab11e7922e4c34882a0abb</id>
                <name><![CDATA[Bus 9 Voltage Mag]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

P = hil.read_analog_signal(name = "Grid_meas.P")
displayValue = P/1.0e6

]]></code>
                <signal_name><![CDATA[Feeder1_trafo4.Vbus9[0]]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>240</x>
                    <y>464</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>f8e3826e1eab11e7b8354c34882a0abb</id>
                <name><![CDATA[Bus 14 Voltage Mag]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

P = hil.read_analog_signal(name = "Grid_meas.P")
displayValue = P/1.0e6

]]></code>
                <signal_name><![CDATA[LOAD1.Vbus14[0]]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>560</x>
                    <y>240</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>f8e46ccf1eab11e7bcaf4c34882a0abb</id>
                <name><![CDATA[Bus 11 Voltage Mag]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

P = hil.read_analog_signal(name = "Grid_meas.P")
displayValue = P/1.0e6

]]></code>
                <signal_name><![CDATA[F1_CB11.Meas1.Vbus11[0]]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>560</x>
                    <y>72</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>f8e509111eab11e7b1cd4c34882a0abb</id>
                <name><![CDATA[Bus 14 Voltage Angle]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

Q = hil.read_analog_signal(name = "Grid_meas.Q")
displayValue = Q/1.0e6

]]></code>
                <signal_name><![CDATA[LOAD1.Vbus14[1]]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>704</x>
                    <y>240</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>f8e5a54f1eab11e790ee4c34882a0abb</id>
                <name><![CDATA[Bus 17 Voltage Mag]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

P = hil.read_analog_signal(name = "Grid_meas.P")
displayValue = P/1.0e6

]]></code>
                <signal_name><![CDATA[F1_CB12.Meas1.Vbus17[0]]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>560</x>
                    <y>408</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>f8e6418f1eab11e7b1d24c34882a0abb</id>
                <name><![CDATA[Bus 17 Voltage Angle]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

Q = hil.read_analog_signal(name = "Grid_meas.Q")
displayValue = Q/1.0e6

]]></code>
                <signal_name><![CDATA[F1_CB12.Meas1.Vbus17[1]]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>704</x>
                    <y>408</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>f8e6ddcf1eab11e7bb674c34882a0abb</id>
                <name><![CDATA[Bus 13 Voltage Mag]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

P = hil.read_analog_signal(name = "Grid_meas.P")
displayValue = P/1.0e6

]]></code>
                <signal_name><![CDATA[F1_CB14.Meas1.Vbus13[0]]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>560</x>
                    <y>184</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>f8e753001eab11e7aa604c34882a0abb</id>
                <name><![CDATA[Bus 12 Voltage Angle]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

Q = hil.read_analog_signal(name = "Grid_meas.Q")
displayValue = Q/1.0e6

]]></code>
                <signal_name><![CDATA[Feeder1_trafo6.Vbus12[1]]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>704</x>
                    <y>128</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>f8e7ef401eab11e7854a4c34882a0abb</id>
                <name><![CDATA[Bus 16 Voltage Mag]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

P = hil.read_analog_signal(name = "Grid_meas.P")
displayValue = P/1.0e6

]]></code>
                <signal_name><![CDATA[DIESEL GENSET.Measurements.Vbus16[0]]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>560</x>
                    <y>352</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>f8e88b801eab11e792d34c34882a0abb</id>
                <name><![CDATA[Bus 11 Voltage Angle]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

Q = hil.read_analog_signal(name = "Grid_meas.Q")
displayValue = Q/1.0e6

]]></code>
                <signal_name><![CDATA[F1_CB11.Meas1.Vbus11[1]]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>704</x>
                    <y>72</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>f8e927c01eab11e7a0484c34882a0abb</id>
                <name><![CDATA[Bus 13 Voltage Angle]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

Q = hil.read_analog_signal(name = "Grid_meas.Q")
displayValue = Q/1.0e6

]]></code>
                <signal_name><![CDATA[F1_CB14.Meas1.Vbus13[1]]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>704</x>
                    <y>184</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>f8e99cf01eab11e795504c34882a0abb</id>
                <name><![CDATA[Bus 16 Voltage Angle]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

Q = hil.read_analog_signal(name = "Grid_meas.Q")
displayValue = Q/1.0e6

]]></code>
                <signal_name><![CDATA[DIESEL GENSET.Measurements.Vbus16[1]]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>704</x>
                    <y>352</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>f8ea39301eab11e7a9d04c34882a0abb</id>
                <name><![CDATA[Bus 15 Voltage Mag]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

P = hil.read_analog_signal(name = "Grid_meas.P")
displayValue = P/1.0e6

]]></code>
                <signal_name><![CDATA[DIESEL_MCB.Vbus15[0]]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>560</x>
                    <y>296</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>f8ead5701eab11e7b2504c34882a0abb</id>
                <name><![CDATA[Bus 12 Voltage Mag]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

P = hil.read_analog_signal(name = "Grid_meas.P")
displayValue = P/1.0e6

]]></code>
                <signal_name><![CDATA[Feeder1_trafo6.Vbus12[0]]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>560</x>
                    <y>128</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>f8eb71ae1eab11e7b8b94c34882a0abb</id>
                <name><![CDATA[Bus 15 Voltage Angle]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

Q = hil.read_analog_signal(name = "Grid_meas.Q")
displayValue = Q/1.0e6

]]></code>
                <signal_name><![CDATA[DIESEL_MCB.Vbus15[1]]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>704</x>
                    <y>296</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>10771f9e1eac11e789b04c34882a0abb</id>
                <name><![CDATA[Bus 10 Voltage Angle]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

Q = hil.read_analog_signal(name = "Grid_meas.Q")
displayValue = Q/1.0e6

]]></code>
                <signal_name><![CDATA[Coupling10.Vbus10[1]]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>384</x>
                    <y>520</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>10780a001eac11e78ce14c34882a0abb</id>
                <name><![CDATA[Bus 10 Voltage Mag]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

P = hil.read_analog_signal(name = "Grid_meas.P")
displayValue = P/1.0e6

]]></code>
                <signal_name><![CDATA[Coupling10.Vbus10[0]]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>240</x>
                    <y>520</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>159eb41e1eac11e7b0ff4c34882a0abb</id>
                <name><![CDATA[Bus 18 Voltage Angle]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

Q = hil.read_analog_signal(name = "Grid_meas.Q")
displayValue = Q/1.0e6

]]></code>
                <signal_name><![CDATA[F1_CB13.Meas1.Vbus18[1]]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>704</x>
                    <y>464</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>159f505e1eac11e7a8434c34882a0abb</id>
                <name><![CDATA[Bus 18 Voltage Mag]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

P = hil.read_analog_signal(name = "Grid_meas.P")
displayValue = P/1.0e6

]]></code>
                <signal_name><![CDATA[F1_CB13.Meas1.Vbus18[0]]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>560</x>
                    <y>464</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>17a7555e1eac11e7ab084c34882a0abb</id>
                <name><![CDATA[Bus 19 Voltage Angle]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

Q = hil.read_analog_signal(name = "Grid_meas.Q")
displayValue = Q/1.0e6

]]></code>
                <signal_name><![CDATA[LOAD3.Vbus19[1]]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>704</x>
                    <y>520</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>17a818b01eac11e7a4aa4c34882a0abb</id>
                <name><![CDATA[Bus 19 Voltage Mag]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

P = hil.read_analog_signal(name = "Grid_meas.P")
displayValue = P/1.0e6

]]></code>
                <signal_name><![CDATA[LOAD3.Vbus19[0]]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>560</x>
                    <y>520</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>24f54a001ead11e7aaf34c34882a0abb</id>
                <name><![CDATA[Genset Active Power]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

P = hil.read_analog_signal(name = "DIESEL GENSET.Measurements.P_Gen1")
displayValue = P*Sb_gen1



]]></code>
                <signal_name><![CDATA[Grid_meas.P]]></signal_name>
                <unit><![CDATA[MW]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>560</x>
                    <y>0</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>24f634611ead11e78e604c34882a0abb</id>
                <name><![CDATA[Genset Reactive Power]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API
from typhoon.api import hil_control_panel as hil
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
Q = hil.read_analog_signal(name = "DIESEL GENSET.Measurements.Q_Gen1")
displayValue = Q*Sb_gen1
]]></code>
                <signal_name><![CDATA[Grid_meas.P]]></signal_name>
                <unit><![CDATA[MVAr]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>500</updateRate>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>704</x>
                    <y>0</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        </components>
</ui_settings>